# Analyse de la capacité d'accueil du système et de la couverture scolaire

## Analyse de la capacité d'accueil 

{{< include _setup.qmd >}}

:::{.callout-note appearance="simple"}

## Méthodologie

### 1. Le taux brut de scolarisation

En notant ```ES``` (respectivement ```PAS``` ) l’effectif des élèves scolarisés (respectivement la population d'enfant d’âge scolaire), on définit le Taux brut de scolarisation (```TBS```) sur un cycle particulier pour une année donnée par:

$$
TBS = \frac{ES}{PAS}
$$
Le Taux brut de scolarisation donne une idée de la proportion d'élèves qu'un pays donnée est capable de scolariser par rapport au nombre total d'enfant en âge d'être scolarisé.(le TBS est un indicateur de **capacité d'accueil**). Un TBS de 100% signifie que le pays est capable d'accueillir dans ses établissements tous les enfants en âge d'être scolarisé.

### 2. Le taux net de scolarisation

On définit de la même manière le Taux net de scolarisation (```TNS```)comme étant le rapport entre l'effectif des élèves scolarisés ayant l'officiel du cycle (6-11 ans pour le cas du Togo au primaire) sur la population d'enfant d'âge scolaire.

$$
TNS = \frac{ESAS}{PAS}
$$

Le taux net de scolarisation rend compte des enfants en âge d'être à l'école et qui y sont effectivement. (le TNS est un indicateur de **participation**)

### 3. Le taux net de scolarisation ajusté

Ces deux taux pourraient être complétés par le taux net de scolarisation ajusté. Le TNSA mesure le pourcentage d’enfants d’un âge donné qui fréquentent un niveau d’enseignement compatible avec leur
âge ou qui suivent un niveau d’enseignement supérieur. Le taux est dit « ajusté » car il inclut les deux groupes.

$$
TNSA = \frac{ESASA}{PAS}
$$

:::

### Implémentation

La base ```hl``` permet de calculer la plupart des indicateurs de l'éducation.
Pour les différents taux de scolarisation, on aura besoin de:

- ```schage``` pour calculer les différents intervalles d'âge;
- ```ED9``` la fréquentation scolaire au moment de la collecte
- ```ED10A``` le niveau fréquenté au moment de l'enquête.

On calcule les différents effectifs ainsi:

- D'abord, On calcule le numérateur: par exemple pour le TBS du primaire, l'enfant fréquente au cours de l'année scolaire 2016-2017 (```ED9 == 1```) et est au primaire (```ED10A```);
- Ensuite, on calcule le dénominateur. Pour le TBS au primaire, l'enfant a l'âge d'être au primaire (```age_school == 1``` ou encore ```schage>= 6 & schage <= 11```);
- Et enfin on fait la somme des enfants répondent au critère du numérateur et du numérateur. Le rapport de ces deux totaux donne le TBS du primaire (```TBS_prim = survey_total(ES_prim,na.rm = TRUE)/survey_total(PAS_prim,na.rm = TRUE)```).



```{r}

hl <- hl |>
  mutate(
    
   PAS_prim = if_else(age_school == 1,1,0),
    PAS_col = if_else(age_school == 2,1,0),
    PAS_lyc = if_else(age_school == 3,1,0),
    
    ES_prim = if_else(ED9 == 1 & ED10A == 1,1,0),
    ES_col = if_else(ED9 == 1 & ED10A == 2,1,0),
    ES_lyc = if_else(ED9 == 1 & ED10A == 3,1,0),
    
    ESAS_prim = if_else(age_school == 1 & ED9 == 1 & ED10A == 1,1,0),
    ESAS_col = if_else(age_school == 2 & ED9 == 1 & ED10A == 2,1,0),
    ESAS_lyc = if_else(age_school == 3 & ED9 == 1 & ED10A == 3,1,0),
    
    ESASA_prim = if_else(age_school == 1 & ED9 == 1 & (ED10A == 1 | ED10A == 2),1,0),
    ESASA_col = if_else(age_school == 2 & ED9 == 1 & (ED10A == 2 | ED10A == 3),1,0),
    ESASA_lyc = if_else(age_school == 3 & ED9 == 1 & (ED10A == 3 | ED10A == 4 | ED10A == 4),1,0),
    
    NAR = case_when(
    age_school == 1 & ED9 == 1 & ED10A == 1 ~ 1,
    age_school == 2 & ED9 == 1 & ED10A == 2 ~ 1,
    age_school == 3 & ED9 == 1 & ED10A == 3 ~ 1,
    .default = 0
    )
  )

hl_design <- hl %>% 
  as_survey_design(weights = hhweight)


indic_sco = function(numerateur1,numerateur2,numerateur3,denominateur,niveau,by,class){
  
    hl_design |>
      group_by({{by}}) |> 
      summarise(
        'TBS_{niveau}' := survey_total({{numerateur1}},na.rm = TRUE)/survey_total({{denominateur}},na.rm = TRUE)*100,
        'TNS_{niveau}' := survey_total({{numerateur2}},na.rm = TRUE)/survey_total({{denominateur}},na.rm = TRUE)*100,
        'TNSA_{niveau}' := survey_total({{numerateur3}},na.rm = TRUE)/survey_total({{denominateur}},na.rm = TRUE)*100
      ) |>
      mutate(class = {{class}},levels = {{by}}) |> 
      select(-contains("_se"),-1)  
}


indic10 <- indic_sco(ES_prim,ESAS_prim,ESASA_prim,PAS_prim,"prim",0,"National")
indic11 <- indic_sco(ES_prim,ESAS_prim,ESASA_prim,PAS_prim,"prim",HL4,"Genre")
indic12 <- indic_sco(ES_prim,ESAS_prim,ESASA_prim,PAS_prim,"prim",HH6,"Urbain/Rural")
indic13 <- indic_sco(ES_prim,ESAS_prim,ESASA_prim,PAS_prim,"prim",HH7,"Region")
indic14 <- indic_sco(ES_prim,ESAS_prim,ESASA_prim,PAS_prim,"prim",windex5,"Richesse")

indic_prim = rbind(indic10,indic11,indic12,indic13,indic14)

indic20 <- indic_sco(ES_col,ESAS_col,ESASA_col,PAS_col,"col",0,"National")
indic21 <- indic_sco(ES_col,ESAS_col,ESASA_col,PAS_col,"col",HL4,"Genre")
indic22 <- indic_sco(ES_col,ESAS_col,ESASA_col,PAS_col,"col",HH6,"Urbain/Rural")
indic23 <- indic_sco(ES_col,ESAS_col,ESASA_col,PAS_col,"col",HH7,"Region")
indic24 <- indic_sco(ES_col,ESAS_col,ESASA_col,PAS_col,"col",windex5,"Richesse")

indic_sec1 = rbind(indic20,indic21,indic22,indic23,indic24)

indic30 <- indic_sco(ES_lyc,ESAS_lyc,ESASA_lyc,PAS_lyc,"lyc",0,"National")
indic31 <- indic_sco(ES_lyc,ESAS_lyc,ESASA_lyc,PAS_lyc,"lyc",HL4,"Genre")
indic32 <- indic_sco(ES_lyc,ESAS_lyc,ESASA_lyc,PAS_lyc,"lyc",HH6,"Urbain/Rural")
indic33 <- indic_sco(ES_lyc,ESAS_lyc,ESASA_lyc,PAS_lyc,"lyc",HH7,"Region")
indic34 <- indic_sco(ES_lyc,ESAS_lyc,ESASA_lyc,PAS_lyc,"lyc",windex5,"Richesse")

indic_sec2 = rbind(indic30,indic31,indic32,indic33,indic34)

df <- cbind(indic_prim |> select(-c(class,levels)),indic_sec1 |> select(-c(class,levels)),indic_sec2)

```



```{r}
#| echo: false



couverture <- df |> 
  mutate(etiquette = case_when(
    class=="National" & levels ==0 ~ "Togo",
    class=="Urbain/Rural"& levels ==1 ~ "Urbian",
    class=="Urbain/Rural"& levels ==2 ~ "Rural",
    class=="Region"& levels ==1 ~ "Maritime",
    class=="Region"& levels ==2 ~ "Plateaux",
    class=="Region"& levels ==3 ~ "Centrale",
    class=="Region"& levels ==4 ~ "Kara",
    class=="Region"& levels ==5 ~ "Savanes",
    class=="Region"& levels ==6 ~ "Lome-Comm",
    class=="Region"& levels ==7 ~ "Golfe-Urbain",
    class=="Richesse"& levels ==1 ~ "plus pauvres",
    class=="Richesse"& levels ==2 ~ "Second",
    class=="Richesse"& levels ==3 ~ "Moyen",
    class=="Richesse"& levels ==4 ~ "Quatrième",
    class=="Richesse"& levels ==5 ~ "plus riches",
    class=="Genre"& levels ==1 ~ "Masculin",
    class=="Genre"& levels ==2 ~ "Feminin",
    
  ))


couverture |> 
  select(-levels) |> 
  relocate(class,etiquette,TBS_prim,TNS_prim,TNSA_prim,TBS_col,TNS_col,TNSA_col,TBS_lyc,TNS_lyc,TNSA_lyc) |> 
  gt(groupname_col = 'class', rowname_col = 'etiquette') |> 
  cols_label(
    class = "Variable",
    etiquette = "Modalités",
    TBS_prim = 'TBS',
    TNS_prim = "TNS",
    TNSA_prim = "TNSA",
    TBS_col = "TBS",
    TNS_col = "TNS",
    TNSA_col = "TNSA",
    TBS_lyc = "TBS",
    TNS_lyc = "TNS",
    TNSA_lyc = "TNSA"
      ) |> 
   fmt_number(
    columns = where(is.numeric),
    decimals = 2
  ) |> 
  tab_spanner(
    label = md('**Caractéristique**'),
    columns = c('class','etiquette')
  ) |>
  tab_spanner(
    label = md('**Primaire (%)**'),
    columns = c('TBS_prim', 'TNS_prim','TNSA_prim')
  ) |>
  tab_spanner(
    label = md('**Secondaire 1 (%)**'),
    columns = c('TBS_col', 'TNS_col','TNSA_col')
  ) |>
  tab_spanner(
    label = md('**Secondaire 2 (%)**'),
    columns = c('TBS_lyc', 'TNS_lyc','TNSA_lyc')
  ) |>
    tab_header(
      title = 'Les indicateurs de couverture: TBS et TNS',
      subtitle = 'Calcul pour le primaire et le secondaire'
    ) |> 
  tab_options(
    data_row.padding = px(2),
    summary_row.padding = px(3), 
    row_group.padding = px(4)    
  ) |> 
  tab_source_note(
    source_note = md("SOURCE: MICS 2017 | Calcul de l'auteur<br>TABLE: Komlan Samati")) |> 
  opt_stylize(style = 6, color = 'gray')

  

```

Les tableaux ne sont pas généralement assez informatifs. Il est important de faire des représentation graphiques pour faire ressortir les resultats les plus importants. Par exemple pour ce tableau, on pourrait un graphique qui compare les taux net de scolarisation entre les différentes régions.

```{r}
#| warning: false
#| message: false
#| echo: false

df <- couverture |> 
  filter(class == "Region"| class == "National" ) |> 
  select(TNS_lyc,etiquette) |> 
  mutate(Togo = ifelse(etiquette == "Togo",TRUE,FALSE)) |> 
  mutate(etiquette = fct_reorder(etiquette, TNS_lyc)) 

  ggplot(df,aes(x = etiquette,y = TNS_lyc,fill = Togo))+
  geom_col(show.legend = FALSE) +
  scale_fill_manual(name = NULL, values = c("#787878FF", "#00B0F0"),labels(c("Fille","Garçon"))) +
  geom_text(
    data = df,
    mapping = aes(x = etiquette, y = TNS_lyc, label = round(TNS_lyc,2)),
    hjust = 1,
    nudge_x = -0.1,
    color = 'white',
    fontface = 'bold',
    size = 4.5
  ) +
  coord_flip() +
  theme_minimal() +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text = element_text(size = 8.5),
        panel.grid.minor.y = element_blank(),
        panel.grid.major.y = element_blank(),
        #panel.grid.minor.x = element_blank(),
        panel.grid.major.x = element_blank()
  )


  
TNS_lyc <-  hl_design |>
    group_by(HH7,HL4) |> 
    summarise(
      TNS = survey_total(ESAS_col,na.rm = TRUE)/survey_total(PAS_col,na.rm = TRUE)*100
    ) |> 
    select(HH7,HL4,TNS)  |> 
    mutate(
      HH7 = case_when(
      HH7 == 1 ~ "Maritime",
      HH7 == 2 ~ "Plateaux",
      HH7 == 3 ~ "Centrale",
      HH7 == 4 ~ "Kara",
      HH7 == 5 ~ "Savanes",
      HH7 == 6 ~ "Lome-Comm",
      HH7 == 7 ~ "Golfe-Urbain"),
      HL4 = case_when(
      HL4 == 1 ~ "Masculin",
      HL4 == 2 ~ "Feminin")
    ) |> 
  mutate(
    HH7 = fct_reorder(HH7,TNS)
  )
  

ggplot(TNS_lyc, aes(x = TNS, y = HH7)) +
  geom_line() +
  geom_point(aes(color = HL4),size = 3,show.legend = FALSE) +
  scale_color_manual(name = NULL, values = c("#33658A", "#00B0F0")) +
  theme_minimal() +
  theme(legend.position = "bottom") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text = element_text(size = 8.5)
  )

```


### Les limites des taux de scolarisation 

Les limites des taux de scolarisation sont de deux ordres:

* Ces taux surestiment la scolarisation car prenant en compte les redoublement;
* Ces taux prennent les entrées tardives (c'est le cas pour le taux brut de scolarisation)


Pour mieux appréhender la scolarisation, on a recours au profil de scolarisation.

## Analyse de la couverture scolaire



:::{.callout-note appearance="simple"}

## Méthodologie

Le profil de scolarisation est la succession de taux d'accès aux différentes classes pour le cycle considéré. Le taux d'admission en première année constitue le point de départ du profil et le taux d'admission en dernière année la fin du profil. (NB: Ne pas confondre le taux d'admission en dernière année et le taux d'achèvement )

Le taux d'accès TA pour une classe j, à une année t est égal au rapport de l'effectif des nouveaux entrants NE et la population ayant l'âge officiel de fréquenter cette classe j, l'année t

$$
TA_{i,t} = \frac{NE_{j,t}}{PA_{i,t}}
$$

:::


### Imputation

La démarche porte sur les étapes suivantes:

- Numérateur par exemple pour le CP2, L'enfant est scolarisé au primaire en 2016-2017 (```ED10A == 1```), fréquente la classe de CP2 (```ED10B == 2```), qu'il soit nouveau dans la classe de CP2 (```ED16A == 1 & ED16B  == 1```, en d'autre terme, il était au CP1 l'année précédente);
- Dénominateur pour le CP2, l'enfant doit être agé de 7 ans (```schage==11```)



```{r}
acces <-  function(niveauAn,classeAn,by){
  if (classeAn < 2){
    hl_design <- hl |> 
      mutate(
        NE= ifelse(ED10A == {{niveauAn}} & ED10B == {{classeAn}} , 1,0),
        PA = if_else(schage == {{classeAn}}+5,1,0)
      ) |>
      as_survey_design(weights = hhweight) 
      
  } else{
    hl_design <- hl |> 
      mutate(
        NE = ifelse(ED10A == {{niveauAn}} & ED10B == {{classeAn}} & ED16A == {{niveauAn}} & ED16B  == {{classeAn}}-1, 1,0),
        PA = if_else(schage == {{classeAn}}+5,1,0)) |>
      as_survey_design(weights = hhweight) 
  }
  
 hl_design |>
    group_by({{by}}) |> 
    summarise(
      "TA_{classeAn}" := survey_total(NE,na.rm = TRUE)/survey_total(PA,na.rm = TRUE)*100
    ) |>
   select(-contains("_se"),-1)  
}



prim_ens = cbind(acces(1,1,0),acces(1,2,0),acces(1,3,0),acces(1,4,0),acces(1,5,0),acces(1,6,0)) |>
  rownames_to_column("var") |> 
  mutate(var = if_else(var == 1,"Nationale",var))
  
prim_genre = cbind(acces(1,1,HL4),acces(1,2,HL4),acces(1,3,HL4),acces(1,4,HL4),acces(1,5,HL4),acces(1,6,HL4)) |> 
  rownames_to_column("var") |> 
  mutate(var = if_else(var == 1,"Masculin","Feminin"))


df_prim <- rbind(prim_ens,prim_genre) 
profil_prim <- data.table::transpose(df_prim,keep.names = "Classe",make.names = "var") |> 
  mutate(Classe = case_when(
    Classe == "TA_1" ~ "CP1",
    Classe == "TA_2" ~ "CP2",
    Classe == "TA_3" ~ "CE1",
    Classe == "TA_4" ~ "CE2",
    Classe == "TA_5" ~ "CM1",
    Classe == "TA_6" ~ "CM2",
  ))

sec1_ens <-  cbind(acces(2,1,0),acces(2,2,0),acces(2,3,0),acces(2,4,0)) |>
  rownames_to_column("var") |> 
  mutate(var = if_else(var == 1,"Nationale",var))

sec1_genre <-  cbind(acces(2,1,HL4),acces(2,2,HL4),acces(2,3,HL4),acces(2,4,HL4)) |> 
  rownames_to_column("var") |> 
  mutate(var = if_else(var == 1,"Masculin","Feminin"))

df_sec1 <- rbind(sec1_ens,sec1_genre) 
profil_sec1 <- data.table::transpose(df_sec1,keep.names = "Classe",make.names = "var") |> 
  mutate(Classe = case_when(
    Classe == "TA_1" ~ "6ieme",
    Classe == "TA_2" ~ "5ieme",
    Classe == "TA_3" ~ "4ieme",
    Classe == "TA_4" ~ "3ieme"
  ))

sec2_ens <-  cbind(acces(3,1,0),acces(3,2,0),acces(3,3,0)) |>
  rownames_to_column("var") |> 
  mutate(var = if_else(var == 1,"Nationale",var))

sec2_genre <-  cbind(acces(3,1,HL4),acces(3,2,HL4),acces(3,3,HL4)) |> 
  rownames_to_column("var") |> 
  mutate(var = if_else(var == 1,"Masculin","Feminin"))


df_sec2 <- rbind(sec2_ens,sec2_genre) 
profil_sec2 <- data.table::transpose(df_sec2,keep.names = "Classe",make.names = "var") |> 
  mutate(Classe = case_when(
    Classe == "TA_1" ~ "2nde",
    Classe == "TA_2" ~ "1ere",
    Classe == "TA_3" ~ "Tle"
  ))




```

Une manière de mieux appréhender les profils de scolarisation est d'en faire une représentation graphique.


```{r}
#| warning: false
#| message: false
#| echo: false

library(patchwork)

profil <- rbind(profil_prim,profil_sec1,profil_sec2) |> 
  mutate(niveau = case_when(
    Classe %in% c("CP1","CP2","CE1","CE2","CM1","CM2") ~ "Primaire",
    Classe %in% c("6ieme","5ieme","4ieme","3ieme") ~ "College",
    Classe %in% c("2nde","1ere","Tle") ~ "Lycée"
  ), x = 1:13)

p1 <- profil |>
  filter(niveau == "Primaire") |> 
  mutate(Classe = fct_reorder(Classe, x)) |> 
  ggplot() +
  geom_point(aes(x = x,y = Nationale),size = 1.5,color = "#787878FF") +
  geom_line(aes(x = x,y = Nationale,color = "#787878FF"),linewidth = 1) +
  geom_point(aes(x = x, y = Feminin),size = 1.5,color = "#903030FF") +
  geom_line(aes(x = x, y = Feminin,color = "#903030FF"),linewidth = 1) +
  geom_point(aes(x = x,y = Masculin),size = 1.5,color = "#172869FF") +
  geom_line(aes(x = x,y = Masculin,color = "#172869FF"),linewidth = 1) +
  scale_y_continuous(
    breaks = seq(10, 130, by = 20),
    limits = c(10, 130)
  ) +
  scale_x_continuous(
    breaks = seq(1, 6, by = 1),
    limits = c(1, 6),
    labels = c("CP1","CP2","CE1","CE2","CM1","CM2")
  ) +
  scale_colour_manual(name = "Genre",values = c("#417839FF","#787878FF","#803342FF"),labels = c("Masculin", "National", "Feminin")) +
  labs(
    x = NULL,
    y = NULL
  ) +
  theme_minimal()

p2 <- profil |>
  filter(niveau == "College") |> 
  mutate(Classe = fct_reorder(Classe, x)) |> 
  ggplot() +
  geom_point(aes(x = x,y = Nationale),size = 1.5,color = "#787878FF") +
  geom_line(aes(x = x,y = Nationale,color = "#787878FF"),linewidth = 1) +
  geom_point(aes(x = x, y = Feminin),size = 1.5,color = "#903030FF") +
  geom_line(aes(x = x, y = Feminin,color = "#903030FF"),linewidth = 1) +
  geom_point(aes(x = x,y = Masculin),size = 1.5,color = "#172869FF") +
  geom_line(aes(x = x,y = Masculin,color = "#172869FF"),linewidth = 1) +
  scale_y_continuous(
    breaks = seq(10, 130, by = 20),
    limits = c(10, 130)
  ) +
  scale_x_continuous(
    breaks = seq(7, 10, by = 1),
    limits = c(7, 10),
    labels = c("6ieme","5ieme","4ieme","3ieme")
  ) +
  scale_colour_manual(name = "Genre",values = c("#417839FF","#787878FF","#803342FF"),labels = c("Masculin", "National", "Feminin")) +
  labs(
    x = NULL,
    y = NULL
  ) +
  theme_minimal()

p3 <- profil |>
  filter(niveau == "Lycée") |> 
  mutate(Classe = fct_reorder(Classe, x)) |> 
  ggplot() +
  geom_point(aes(x = x,y = Nationale),size = 1.5,color = "#787878FF") +
  geom_line(aes(x = x,y = Nationale,color = "#787878FF"),linewidth = 1) +
  geom_point(aes(x = x, y = Feminin),size = 1.5,color = "#903030FF") +
  geom_line(aes(x = x, y = Feminin,color = "#903030FF"),linewidth = 1) +
  geom_point(aes(x = x,y = Masculin),size = 1.5,color = "#172869FF") +
  geom_line(aes(x = x,y = Masculin,color = "#172869FF"),linewidth = 1) +
  scale_y_continuous(
    breaks = seq(10, 130, by = 20),
    limits = c(10, 130)
  ) +
  scale_x_continuous(
    breaks = seq(11, 13, by = 1),
    limits = c(11, 13),
    labels = c("2nde","1ere","Tle")
  ) +
  scale_colour_manual(name = "Genre",values = c("#417839FF","#787878FF","#803342FF"),labels = c("Masculin", "National", "Feminin")) +
  labs(
    x = NULL,
    y = NULL
  ) +
  theme_minimal()

p1 + p2 + p3 + plot_layout(widths = c(2,1.5,1),axes = "collect", guides = "collect") & theme(legend.position = "top") 


```


